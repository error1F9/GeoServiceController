services:
  hugo:
    container_name: hugo-container
    image: klakegg/hugo:latest
    command: server --disableFastRender
    volumes:
     - ./hugo:/src
    ports:
      - "1313:1313"
    restart: unless-stopped

  proxy:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxy-container
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - hugo
      - db
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    restart: on-failure

  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  grafana:
    container_name: grafana-container
    image: kirya225/grafanapreloaded:latest
    ports:
      - "3000:3000"
    volumes:
      - 'grafana_storage:/var/lib/grafana'
    restart: unless-stopped

  prometheus:
    container_name: prometheus-container
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
        - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped



volumes:
    grafana_storage: { }


