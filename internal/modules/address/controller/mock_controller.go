// Code generated by MockGen. DO NOT EDIT.
// Source: address.go
//
// Generated by this command:
//
//	mockgen -source=address.go -destination=mocks/mock_controller.go -package=mocks
//

// Package mocks is a generated GoMock package.
package controller

import (
	http "net/http"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGeoServiceControllerInterface is a mock of GeoServiceControllerInterface interface.
type MockGeoServiceControllerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGeoServiceControllerInterfaceMockRecorder
	isgomock struct{}
}

// MockGeoServiceControllerInterfaceMockRecorder is the mock recorder for MockGeoServiceControllerInterface.
type MockGeoServiceControllerInterfaceMockRecorder struct {
	mock *MockGeoServiceControllerInterface
}

// NewMockGeoServiceControllerInterface creates a new mock instance.
func NewMockGeoServiceControllerInterface(ctrl *gomock.Controller) *MockGeoServiceControllerInterface {
	mock := &MockGeoServiceControllerInterface{ctrl: ctrl}
	mock.recorder = &MockGeoServiceControllerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeoServiceControllerInterface) EXPECT() *MockGeoServiceControllerInterfaceMockRecorder {
	return m.recorder
}

// HandleAddressGeocode mocks base method.
func (m *MockGeoServiceControllerInterface) HandleAddressGeocode(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleAddressGeocode", w, r)
}

// HandleAddressGeocode indicates an expected call of HandleAddressGeocode.
func (mr *MockGeoServiceControllerInterfaceMockRecorder) HandleAddressGeocode(w, r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleAddressGeocode", reflect.TypeOf((*MockGeoServiceControllerInterface)(nil).HandleAddressGeocode), w, r)
}

// HandleAddressSearch mocks base method.
func (m *MockGeoServiceControllerInterface) HandleAddressSearch(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleAddressSearch", w, r)
}

// HandleAddressSearch indicates an expected call of HandleAddressSearch.
func (mr *MockGeoServiceControllerInterfaceMockRecorder) HandleAddressSearch(w, r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleAddressSearch", reflect.TypeOf((*MockGeoServiceControllerInterface)(nil).HandleAddressSearch), w, r)
}
